// Created by kl2dfg (processFunction)
{
  "objectType" : "Func",
  "metadata" : {
    "uiTooltip" : "Returns tracking state reading based on the specified absolute system time.\nPass an absTime value of 0.0 to request the most recent sensor reading. In this case\nboth PredictedPose and SamplePose will have the same value.\nThis may also be used for more refined timing of front buffer rendering logic, and so on.\nThis may be called by multiple threads.\novrTrackingState value. Use 0 to request the most recent tracking state.\nthe \"App-to-Mid-Photon\" latency timer starts from. If a given ovrLayer\nprovides \"SensorSampleTimestamp\", that will override the value stored here.\n\n Supported by ovrDevice"
    },
  "title" : "GetTrackingState",
  "ports" : [
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "this",
      "execPortType" : "In",
      "typeSpec" : "ovrDevice"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "absTime",
      "execPortType" : "In",
      "typeSpec" : "Float64"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "Out",
      "name" : "latencyMarker",
      "execPortType" : "In",
      "typeSpec" : "Boolean"
      },
    {
      "objectType" : "Port",
      "nodePortType" : "In",
      "name" : "result",
      "execPortType" : "Out",
      "typeSpec" : "ovrTrackingState"
      }
    ],
  "extDeps" : {
    "Oculus" : "*"
    },
  "presetGUID" : "CE1CF1AF543763FBA740BC514CB03909",
  "code" : "require Oculus;

dfgEntry {
  result = this.getTrackingState(absTime, latencyMarker);
}
"
  }