/*
 *  Copyright 2010-2014 Fabric Software Inc. All rights reserved.
 */

/// Orientation is currently tracked (connected and in use).
const Integer ovrStatus_OrientationTracked = 0x0001;
/// Position is currently tracked (false if out of range).
const Integer ovrStatus_PositionTracked = 0x0002;
/// Camera pose is currently tracked.
const Integer ovrStatus_CameraPoseTracked = 0x0004;
/// Position tracking hardware is connected.
const Integer ovrStatus_PositionConnected = 0x0020;
/// HMD Display is available and connected.
const Integer ovrStatus_HmdConnected = 0x0080;

struct ovrTrackingState {
  /// Predicted head pose (and derivatives) at the requested absolute time.
  /// The look-ahead interval is equal to (HeadPose.TimeInSeconds - RawSensorData.TimeInSeconds).
  ovrPoseState HeadPose;

  /// Current pose of the external camera (if present).
  /// This pose includes camera tilt (roll and pitch). For a leveled coordinate
  /// system use LeveledCameraPose.
  ovrPose CameraPose;

  /// Camera frame aligned with gravity.
  /// This value includes position and yaw of the camera, but not roll and pitch.
  /// It can be used as a reference point to render real-world objects in the correct location.
  ovrPose LeveledCameraPose;

  /// The most recent sensor data received from the HMD.
  ovrSensorData RawSensorData;

  /// Tracking status described by ovrStatusBits.
  Size StatusFlags;

  //// 0.4.1
  /// Time spent processing the last vision frame
  Float64 LastVisionProcessingTime;
};

function Boolean ovrTrackingState.hasTrackedPose() {
  return this.StatusFlags & (ovrStatus_OrientationTracked | ovrStatus_PositionTracked);
}