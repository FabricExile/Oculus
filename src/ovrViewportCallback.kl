/*
 *  Copyright 2010-2014 Fabric Software Inc. All rights reserved.
 */

require SpliceStandalone;
require Singletons;

object ovrViewportCallback : SpliceStandaloneViewportCallback {
  ovrDevice device;
};

function ovrViewportCallback() {
  this.device = null;
}

function ovrViewportCallback(ovrDevice device) {
  this.device = device;
}

function ovrViewportCallback.registerForViewport!() {
  SpliceStandaloneViewport viewport = Singleton_get('Viewport');
  if(viewport) {
    viewport.registerCallback(SpliceStandaloneViewportPhase_Initialize, this);
    viewport.registerCallback(SpliceStandaloneViewportPhase_Resize, this);
    viewport.registerCallback(SpliceStandaloneViewportPhase_BeforePaint, this);
    viewport.registerCallback(SpliceStandaloneViewportPhase_Paint, this);
    viewport.registerCallback(SpliceStandaloneViewportPhase_AfterPaint, this);
  }
}

function Boolean ovrViewportCallback.perform!(SpliceStandaloneViewportPhase phase, io SpliceStandaloneViewport viewport) {
  report('ovrViewportCallback: Phase '+phase);
  return false;
}
