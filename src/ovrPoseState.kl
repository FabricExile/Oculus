/*
 *  Copyright 2010-2014 Fabric Software Inc. All rights reserved.
 */

require Math;

struct ovrPoseState {
  ovrPose ThePose;
  Vec3 AngularVelocity;
  Vec3 LinearVelocity;
  Vec3 AngularAcceleration;
  Vec3 LinearAcceleration;
  /// Absolute time of this state sample.
  Float64 TimeInSeconds;
};

function Xfo ovrPoseState.getPoseAsXfo(Scalar scale) {
  Xfo result;
  result.tr = this.ThePose.Position * scale;
  result.ori = this.ThePose.Orientation;
  return result;
}

function Mat44 ovrPoseState.getPoseAsMat44(Scalar scale) {
  return this.getPoseAsXfo(scale).toMat44();
}
